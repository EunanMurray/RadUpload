// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MockRepeatConsole.Data;

#nullable disable

namespace MockRepeatConsole.Migrations
{
    [DbContext(typeof(DbContextS00235207))]
    [Migration("20241230132615_IntialCreate")]
    partial class IntialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MockRepeatPractice.Models.Flights", b =>
                {
                    b.Property<int>("FlightID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightID"));

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("maxSeats")
                        .HasColumnType("int");

                    b.Property<string>("origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FlightID");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            FlightID = 1,
                            DepartureDate = new DateTime(2021, 1, 12, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "IT-001",
                            country = "Italy",
                            destination = "Rome",
                            maxSeats = 110,
                            origin = "Dublin"
                        },
                        new
                        {
                            FlightID = 2,
                            DepartureDate = new DateTime(2022, 1, 23, 12, 50, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "EN-002",
                            country = "England",
                            destination = "London",
                            maxSeats = 110,
                            origin = "Dublin"
                        },
                        new
                        {
                            FlightID = 3,
                            DepartureDate = new DateTime(2022, 1, 4, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "FR-001",
                            country = "France",
                            destination = "Paris",
                            maxSeats = 120,
                            origin = "Dublin"
                        },
                        new
                        {
                            FlightID = 4,
                            DepartureDate = new DateTime(2022, 1, 5, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "BE-001",
                            country = "Belgium",
                            destination = "Brussels",
                            maxSeats = 88,
                            origin = "Dublin"
                        },
                        new
                        {
                            FlightID = 5,
                            DepartureDate = new DateTime(2022, 1, 24, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "DU-001",
                            country = "Ireland",
                            destination = "Dublin",
                            maxSeats = 110,
                            origin = "London"
                        });
                });

            modelBuilder.Entity("MockRepeatPractice.Models.Passengers", b =>
                {
                    b.Property<int>("PassengerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PassengerID"));

                    b.Property<int>("FlightID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("baggageCharge")
                        .HasColumnType("float");

                    b.Property<double>("cost")
                        .HasColumnType("float");

                    b.HasKey("PassengerID");

                    b.HasIndex("FlightID");

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            PassengerID = 1,
                            FlightID = 2,
                            Name = "Fred Farnell",
                            TicketType = "Economy",
                            baggageCharge = 30.0,
                            cost = 51.829999999999998
                        },
                        new
                        {
                            PassengerID = 2,
                            FlightID = 2,
                            Name = "Tom Mc Manus",
                            TicketType = "First Class",
                            baggageCharge = 10.0,
                            cost = 127.0
                        },
                        new
                        {
                            PassengerID = 3,
                            FlightID = 3,
                            Name = "Bill Trimble",
                            TicketType = "First Class",
                            baggageCharge = 10.0,
                            cost = 140.0
                        },
                        new
                        {
                            PassengerID = 4,
                            FlightID = 4,
                            Name = "Freda Mc Donald",
                            TicketType = "Economy",
                            baggageCharge = 15.0,
                            cost = 50.920000000000002
                        },
                        new
                        {
                            PassengerID = 5,
                            FlightID = 1,
                            Name = "Mary Malone",
                            TicketType = "Economy",
                            baggageCharge = 15.0,
                            cost = 66.219999999999999
                        },
                        new
                        {
                            PassengerID = 6,
                            FlightID = 5,
                            Name = "Tom Mc Manus",
                            TicketType = "First Class",
                            baggageCharge = 10.0,
                            cost = 127.0
                        });
                });

            modelBuilder.Entity("MockRepeatPractice.Models.Passengers", b =>
                {
                    b.HasOne("MockRepeatPractice.Models.Flights", "Flight")
                        .WithMany("Passengers")
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("MockRepeatPractice.Models.Flights", b =>
                {
                    b.Navigation("Passengers");
                });
#pragma warning restore 612, 618
        }
    }
}
